{"version":3,"sources":["../../src/components/BarcodeReader/BarcodeReader.jsx","../../src/provider/context.js","../../src/provider/reducer.js","../../src/provider/hooks.js","../../src/components/RequireLandscape/RequireLandscape.jsx","../../src/utilities/device.js","../../src/components/BoletoReader/BoletoReader.jsx","../../src/utilities/boleto.js","../../src/provider/actions.js","../../src/components/Support/Support.jsx","../../src/provider/BoletoBarcodeReaderProvider.jsx","App.js","index.js"],"names":["BarcodeReader","id","init","inputStream","decoder","readers","format","config","height","window","canvasWidth","canvasHeight","aspectRatio","min","max","onInit","onError","onDetected","onCancel","onProcessed","svgDetectingBoxesCoords","x","y","svgDetectingBoxes","color","lineWidth","svgDetectingBox","svgDetectingLine","textHeader","textButton","useState","videoHeight","parseInt","videoHeightHalf","canvasHeightHalf","canvasY","canvasTop","run","useCallback","quaggaInit","type","target","constraints","width","facingMode","frequency","singleChannel","locate","locator","patchSize","halfSample","err","console","quaggaStart","quaggaOnDetected","result","code","codeResult","quaggaOnProcessed","drawingCtx","quaggaCanvas","drawingCanvas","box","boxes","guideLine","line","readedCode","guideBoxes","guideBoxItem","quaggaImageDebug","guideBox","error","stop","quaggaOffDetected","quaggaOffProcessed","quaggaStop","handleScreenResize","clearTimeout","compareWidth","setResizing","setTimeout","setCompare","handleCancel","setReading","useLayoutEffect","reading","className","styles","style","rbr__overlay","rbr__overlay__item","rbr__overlay__line","onClick","boletoReaderDefaultState","supported","textLandscape","textNotSupported","textValidating","validating","windowHeight","windowWidth","innerWidth","BoletoReaderContext","createContext","boletoReaderReducer","state","action","content","useBoletoReader","useContext","RequireLandscape","minWidth","textFromContext","dangerouslySetInnerHTML","__html","String","children","getCamera","deviceKind","Promise","navigator","reject","devices","foundDevice","device","resolve","e","getDevice","BoletoReader","props","handleDetected","boleto","getBoletoByCode","boletoReaderActions","set","Support","useEffect","setter","cameraDevice","onValidate","BoletoBarcodeReaderProvider","useReducer","windowSizes","delay","innerHeight","resizeDelay","setSizes","useWindowSizes","dispatch","value","App","tabs","tabsId","tab","setTab","setBoleto","barcode","setBarcode","readersHeight","setReadersHeight","reset","restart","onDetectBoleto","detectedBoleto","banks","expired","expiredDays","expirationDate","prettyAmount","confirm","toUpperCase","onDetectBarcode","selectTab","tabName","getElementHeight","elementId","element","document","getElementById","offsetHeight","calcReaderHeight","tabsHeight","headerHeight","addEventListener","removeEventListener","map","key","disabled","JSON","stringify","replace","ReactDOM","render"],"mappings":"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","file":"static/js/main.a37f79a9.chunk.js","sourcesContent":["import React, { useCallback, useLayoutEffect, useState } from 'react'\nimport {\n  init as quaggaInit,\n  start as quaggaStart,\n  stop as quaggaStop,\n  canvas as quaggaCanvas,\n  ImageDebug as quaggaImageDebug,\n  onDetected as quaggaOnDetected,\n  onProcessed as quaggaOnProcessed,\n  offProcessed as quaggaOffProcessed,\n  offDetected as quaggaOffDetected\n} from '@ericblade/quagga2'\nimport styles from './styles.module.css'\n\nexport function BarcodeReader({\n  id = 'react-boleto-reader--barcode',\n  init = {},\n  inputStream = {},\n  decoder = {},\n  readers = [\n    { format: 'ean_reader', config: {} },\n    { format: 'code_128_reader', config: {} }\n  ],\n  height = window.innerHeight,\n  canvasWidth = 1280,\n  canvasHeight = 720,\n  aspectRatio = {\n    min: 0,\n    max: 1\n  },\n  onInit = () => {},\n  onError = () => {},\n  onDetected = () => {},\n  onCancel = () => {},\n  onProcessed = () => {},\n  svgDetectingBoxesCoords = {\n    x: 0,\n    y: 1\n  },\n  svgDetectingBoxes = {\n    color: 'rgba(255, 0, 0, .25)',\n    lineWidth: 2\n  },\n  svgDetectingBox = {\n    color: 'transparent',\n    lineWidth: 2\n  },\n  svgDetectingLine = {\n    color: 'rgb(255, 0, 0, .8)',\n    lineWidth: 4\n  },\n  textHeader = 'Com boa iluminação, posicione o código de barras na área retangular:',\n  textButton = 'Cancelar'\n}) {\n  const [compareWidth, setCompare] = useState(window.innerWidth)\n  const [resizing, setResizing] = useState(null)\n  const [reading, setReading] = useState(true)\n  const videoHeight = parseInt(height, 10)\n  const videoHeightHalf = videoHeight / 2\n  const canvasHeightHalf = canvasHeight / 2\n  const canvasY = canvasHeightHalf - parseInt(height, 10) / 2\n  const canvasTop =\n    videoHeight > canvasHeight\n      ? `${videoHeightHalf - canvasHeightHalf}px`\n      : `-${canvasY - 40}px`\n\n  /**\n   * Initialize Quagga2 and set the listeners\n   */\n  const run = useCallback(() => {\n    try {\n      quaggaInit(\n        {\n          inputStream: {\n            type: 'LiveStream',\n            target: `#${id}`,\n            constraints: {\n              width: canvasWidth,\n              height: canvasHeight,\n              facingMode: 'environment',\n              aspectRatio\n            },\n            ...inputStream\n          },\n          frequency: 5,\n          singleChannel: true,\n          locate: true,\n          locator: {\n            patchSize: 'medium',\n            halfSample: true\n          },\n          ...init,\n          decoder: {\n            readers,\n            ...decoder\n          }\n        },\n        (err) => {\n          if (err) {\n            onError(err)\n            console.error(err)\n            return\n          }\n\n          quaggaStart()\n          onInit()\n        }\n      )\n\n      quaggaOnDetected((result) => {\n        const {\n          codeResult: { code }\n        } = result || {}\n\n        onDetected(result, code)\n      })\n\n      quaggaOnProcessed((result) => {\n        onProcessed(result)\n\n        const shouldDrawGuides =\n          !!svgDetectingBoxes || svgDetectingBox || svgDetectingLine\n\n        if (!shouldDrawGuides || !result || typeof result !== 'object') {\n          return\n        }\n\n        const drawingCtx = quaggaCanvas.ctx.overlay\n        const drawingCanvas = quaggaCanvas.dom.overlay\n        const {\n          box: guideBox,\n          boxes: guideBoxes,\n          codeResult,\n          line: guideLine\n        } = result\n        const { code: readedCode } = codeResult || {}\n\n        if (guideBoxes && svgDetectingBoxes) {\n          drawingCtx.clearRect(\n            0,\n            0,\n            parseInt(drawingCanvas.getAttribute('width')),\n            parseInt(drawingCanvas.getAttribute('height'))\n          )\n\n          guideBoxes\n            .filter((guideBoxItem) => guideBoxItem !== guideBox)\n            .forEach((guideBoxItem) => {\n              quaggaImageDebug.drawPath(\n                guideBoxItem,\n                svgDetectingBoxesCoords,\n                drawingCtx,\n                svgDetectingBoxes\n              )\n            })\n        }\n\n        if (guideBox && svgDetectingBox) {\n          quaggaImageDebug.drawPath(\n            guideBox,\n            { x: 0, y: 1 },\n            drawingCtx,\n            svgDetectingBox\n          )\n        }\n\n        if (readedCode && svgDetectingLine) {\n          quaggaImageDebug.drawPath(\n            guideLine,\n            { x: 'x', y: 'y' },\n            drawingCtx,\n            svgDetectingLine\n          )\n        }\n      })\n    } catch (error) {\n      onError(error)\n    }\n  }, [onInit, onDetected, onProcessed, onError])\n\n  /**\n   * Stop the party\n   */\n  const stop = useCallback(() => {\n    quaggaOffDetected()\n    quaggaOffProcessed()\n    quaggaStop()\n  }, [])\n\n  /**\n   * Listener to screen resize, restarting the reader\n   */\n  const handleScreenResize = useCallback(() => {\n    clearTimeout(resizing)\n\n    if (compareWidth === window.innerWidth) {\n      return\n    }\n\n    stop()\n    setResizing(\n      setTimeout(() => {\n        run()\n        setCompare(window.innerWidth)\n      }, 1500)\n    )\n  }, [run, stop, compareWidth])\n\n  /**\n   * User cancel callback\n   */\n  const handleCancel = useCallback(() => {\n    onCancel()\n    quaggaStop()\n    setTimeout(() => setReading(false), 2000)\n  }, [onCancel, stop, run])\n\n  /**\n   * Start the party at the first component render call\n   */\n  useLayoutEffect(() => {\n    run()\n    window.addEventListener('resize', handleScreenResize)\n\n    /**\n     * Unmount\n     */\n    return () => {\n      window.removeEventListener('resize', handleScreenResize)\n    }\n  }, [run, handleScreenResize])\n\n  return !reading ? null : (\n    <div\n      id={id}\n      className={styles.rbr}\n      style={{\n        '--rbr-canvas-top': canvasTop,\n        '--rbr-height': height,\n        height\n      }}\n    >\n      <div className={styles.rbr__overlay}>\n        <div className={styles.rbr__overlay__item}>\n          {textHeader}\n        </div>\n        <div className={styles.rbr__overlay__line}>\n          <hr />\n        </div>\n        <div className={styles.rbr__overlay__item}>\n          <button\n            type='button'\n            className={styles.rbr__btn}\n            onClick={handleCancel}\n          >\n            {textButton}\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { createContext } from 'react'\n\nexport const boletoReaderDefaultState = {\n  supported: true,\n  textLandscape: ' Coloque este dispositivo em posição horizontal. <br/><br/> Esta tela possui largura de #wWidth, o que é insuficiente para realizar a leitura do código de barras de boletos. <br/> <br/> Se ainda assim não funcionar, utilize outro dispositivo com resolução superior a #minWidth.',\n  textNotSupported: ' Aparentemente este dispositivo não tem suporte a câmera ou o uso dela foi negado, <br /> o quê impossibilita a leitura de códigos de barras. ',\n  textValidating: ' Buscando por dispositivo de vídeo... ',\n  validating: true,\n  windowHeight: window.innerHeight,\n  windowWidth: window.innerWidth,\n}\n\nexport const BoletoReaderContext = createContext(boletoReaderDefaultState)\n","import { boletoReaderDefaultState } from './context'\n\nexport function boletoReaderReducer(state = boletoReaderDefaultState, action = {}) {\n  const { type, content } = action\n\n  switch (type) {\n    case 'set':\n      return {\n        ...state,\n        ...(content || {})\n      }\n\n    default:\n      return state\n  }\n}\n","import { useContext, useLayoutEffect, useReducer, useState } from 'react';\nimport { boletoReaderDefaultState, BoletoReaderContext } from './context';\nimport { boletoReaderReducer } from './reducer';\n\nexport function useBoletoReader() {\n  return useContext(BoletoReaderContext);\n}\n\nexport function useBoletoReaderReducer() {\n  return useReducer(boletoReaderReducer, boletoReaderDefaultState);\n}\n\nexport function useWindowSizes(delay = 500) {\n  const [sizes, setSizes] = useState({\n    windowWidth: window.innerWidth,\n    windowHeight: window.innerHeight\n  })\n\n  useLayoutEffect(() => {\n    let resizeDelay = null\n\n    function handleResize() {\n      clearTimeout(resizeDelay)\n\n      resizeDelay = setTimeout(() => {\n        setSizes({\n          windowWidth: window.innerWidth,\n          windowHeight: window.innerHeight\n        })\n      }, delay);\n    }\n\n    window.addEventListener('resize', handleResize)\n\n    return () => {\n      window.removeEventListener('resize', handleResize)\n    }\n  }, [])\n\n  return sizes\n}\n\n","import React from 'react'\nimport { useBoletoReader } from '../../hooks'\nimport styles from '../../css/index.css'\n\nexport function RequireLandscape({\n  children,\n  height,\n  minWidth = 640,\n  textLandscape\n}) {\n  const { windowWidth, textLandscape: textFromContext } = useBoletoReader()\n  const requireLargeWidth = windowWidth < minWidth\n\n  return !requireLargeWidth ? children : (\n    <div\n      className={styles.rbr__segment}\n      dangerouslySetInnerHTML={{\n        __html: String(textLandscape || textFromContext)\n          .replace('#minWidth', `${minWidth} pixels`)\n          .replace('#wWidth', `${windowWidth} pixels`)\n      }}\n      style={{\n        '--rbr-height': height\n      }}\n    />\n  )\n}\n","/**\n * Search for device resource.\n * If it's existent and supported by browser.\n *\n * @param {String} deviceKind\n *\n * @returns {Promise}\n */\nexport function getDevice(deviceKind = '') {\n  return new Promise((resolve, reject) => {\n    try {\n      if (\n        !deviceKind\n        || !navigator.mediaDevices\n        || !navigator.mediaDevices.enumerateDevices\n      ) {\n        reject()\n\n        return\n      }\n\n      navigator.mediaDevices.enumerateDevices()\n        .catch(reject)\n        .then((devices) => {\n          const foundDevice = devices.filter((device) => device.kind === deviceKind).pop() || null\n\n          if (foundDevice) {\n            resolve(foundDevice)\n          } else {\n            reject()\n          }\n        })\n    } catch (e) {\n      reject(e)\n    }\n  })\n}\n\n/**\n * Search for device camera.\n * If it's existent and supported by browser.\n *\n * @returns {Promise}\n */\nexport function getCamera() {\n  return getDevice('videoinput');\n}\n","import React, { useCallback, useLayoutEffect, useState } from 'react'\nimport { BarcodeReader } from '../BarcodeReader'\nimport { RequireLandscape } from '../RequireLandscape'\nimport { getBoletoByCode } from '../../utilities'\n\nexport function BoletoReader({\n  id = 'react-boleto-reader',\n  readers = ['i2of5_reader'],\n  height,\n  minWidth = 640,\n  aspectRatio = {\n    min: 1,\n    max: 2\n  },\n  onDetected = () => {},\n  textLandscape = '',\n  ...props\n}) {\n  /**\n   * Intercept the readed code, validating if it's a valid boleto.\n   *\n   * @param {Object} result - Quagga lib result data\n   */\n  const handleDetected = useCallback((result, code) => {\n    const boleto = getBoletoByCode(code)\n\n    if (!boleto) {\n      return\n    }\n\n    onDetected(boleto, code, result)\n  }, [])\n\n  return (\n    <RequireLandscape\n      height={height}\n      minWidth={minWidth}\n      textLandscape={textLandscape}\n    >\n      <BarcodeReader\n        id={id}\n        height={height || wHeight}\n        readers={readers}\n        aspectRatio={aspectRatio}\n        onDetected={handleDetected}\n        {...props}\n      />\n    </RequireLandscape>\n  )\n}\n","import { Boleto } from 'broleto'\n\n/**\n * Get boleto data by barcode or line code\n *\n * @param {String} code\n *\n * @returns {Object}\n */\nexport function getBoletoByCode(code) {\n  const boleto = new Boleto(String(code))\n\n  if (!boleto || !boleto.valid()) {\n    return null\n  }\n\n  return boleto.toJSON()\n}\n","function set(content = {}) {\n  return { type: 'set', content }\n}\n\nexport const boletoReaderActions = {\n  set\n}\n","import React, { useEffect } from 'react'\nimport { useBoletoReader } from '../../hooks'\nimport { getCamera } from '../../utilities'\nimport styles from '../../css/index.css'\n\nexport function Support({ children }) {\n  const {\n    setter,\n    onValidate,\n    validating,\n    supported,\n    textNotSupported,\n    textValidating\n  } = useBoletoReader()\n\n  useEffect(() => {\n    setter({ supported: null, validating: true })\n\n    getCamera()\n      .then((cameraDevice) => {\n        setter({ supported: cameraDevice || null, validating: false })\n        onValidate(cameraDevice || null)\n      })\n      .catch((error) => {\n        setter({ supported: null, validating: true })\n        onValidate(null, error)\n        console.error(error)\n      })\n  }, [])\n\n  return !validating && supported ? children : (\n    <div\n      id=\"rbr_support\"\n      className={styles.rbr__segment}\n    >\n      {validating && (\n        <div\n          id=\"rbr_support_validating\"\n          dangerouslySetInnerHTML={{ __html: textValidating }}\n        />\n      )}\n      {!supported && (\n        <div\n          id=\"rbr_support_not_supported\"\n          dangerouslySetInnerHTML={{ __html: textNotSupported }}\n        />\n      )}\n    </div>\n  )\n}\n","import React, { useCallback, useEffect } from 'react';\nimport { boletoReaderActions } from './actions';\nimport { BoletoReaderContext } from './context';\nimport { useBoletoReaderReducer, useWindowSizes } from './hooks';\nimport { Support } from '../components/Support'\n\nexport function BoletoBarcodeReaderProvider({\n  children,\n  textNotSupported,\n  textValidating,\n  onValidate = () => {},\n}) {\n  const [state, dispatch] = useBoletoReaderReducer();\n  const windowSizes = useWindowSizes();\n  const setter = useCallback((content) => {\n    dispatch(boletoReaderActions.set(content))\n  }, [dispatch])\n\n  useEffect(() => {\n    setter(windowSizes)\n  }, [setter, windowSizes])\n\n  return (\n    <BoletoReaderContext.Provider\n      value={{\n        ...state,\n        textNotSupported: textNotSupported || state.textNotSupported,\n        textValidating: textValidating || state.textValidating,\n        onValidate,\n        dispatch,\n        setter\n      }}\n    >\n      <Support>\n        {children}\n      </Support>\n    </BoletoReaderContext.Provider>\n  );\n}\n","import React, { useCallback, useLayoutEffect, useState } from 'react';\n\nimport { BarcodeReader, BoletoReader, BoletoBarcodeReaderProvider } from 'react-boleto-reader';\nimport 'react-boleto-reader/dist/index.css'; /** The default styles. It's optional. */\n\nimport './index.css'; /** Not important: example styles. */\n\nexport default function App() {\n  /** Not important: example definitions */\n  const tabs = [ 'boleto', 'barcode' ];\n  const tabsId = 'example_tabs';\n  const headerId = 'example_header';\n  const [tab, setTab] = useState(tabs[0]);\n  const [boleto, setBoleto] = useState(null);\n  const [barcode, setBarcode] = useState(null);\n  const [reading, setReading] = useState(false);\n  const [readersHeight, setReadersHeight] = useState(0);\n\n  /**\n   * Not important: example stuff\n   */\n  const reset = useCallback(() => {\n    setBoleto(null);\n    setBarcode(null);\n    setReading(false);\n  }, []);\n\n  /**\n   * Not important: example stuff\n   */\n  const restart = useCallback(() => {\n    setBoleto(null);\n    setBarcode(null);\n    setReading(true);\n  }, []);\n\n  /**\n   *\n   */\n  const onCancel = useCallback(() => {\n    reset();\n  }, [reset]);\n\n  /**\n   * Important:\n   *\n   * This is the callback defined to receive boleto data\n   * when the reader have sucesse identifying that big barcode.\n   *\n   * In this example we have the `reading` variable,\n   * who helps to render or not render the BoletoReader component.\n   *\n   * You don't need to do like this.\n   *\n   * @param {Object} detectedBoleto\n   */\n  const onDetectBoleto = useCallback((detectedBoleto) => {\n    setReading(false);\n\n    const {\n      barcode,\n      banks,\n      expired,\n      expiredDays,\n      expirationDate,\n      prettyAmount,\n      type,\n    } = detectedBoleto;\n\n    const confirmed = window.confirm(\n      'Estes são os dados do boleto? '.toUpperCase()\n      + `\\n\\nTipo: \\n${type} `\n      + `\\n\\nBanco: \\n${banks} `\n      + `\\n\\nValor: \\n${prettyAmount} `\n      + `\\n\\nVencimento: \\n${expirationDate}`\n      + `\\n\\nVencido: \\n${expired ? 'SIM' : 'NÃO'}`\n      + `\\n\\nDias Vencido: \\n${expiredDays}`\n      + `\\n\\nCódigo de Barras: \\n${barcode}`\n      + '\\n(É diferente do número impresso no boleto, o chamado \"linha digitável\")'\n    );\n\n    if (!confirmed) {\n      setReading(true);\n\n      return;\n    }\n\n    setReading(false);\n    setBoleto(detectedBoleto);\n  }, []);\n\n  /**\n   * Important:\n   *\n   * This is the callback defined to receive barcode number\n   * when the reader have sucesse identifying.\n   *\n   * In this example we have the `reading` variable,\n   * who helps to render or not render the BarcodeReader component.\n   *\n   * You don't need to do like this.\n   *\n   * @param {Object} detectedBoleto\n   */\n  const onDetectBarcode = useCallback((result, code) => {\n    setReading(false);\n\n    const confirmed = window.confirm(\n      'Is the correct code? '.toUpperCase()\n      + `\\n\\n${code} `\n    );\n\n    if (!confirmed) {\n      setReading(true);\n\n      return;\n    }\n\n    setReading(false);\n    setBarcode({ code, ...result });\n  }, []);\n\n  /**\n   *\n   * @param {String} tabName\n   */\n  const selectTab = useCallback((tabName) => {\n    if (tab === tabName) {\n      return;\n    }\n\n    reset();\n    setTab(tabName);\n  }, [reset, tab]);\n\n  /**\n   * Not important: example stuff\n   */\n  const getElementHeight = useCallback((elementId = '') => {\n    const element = document.getElementById(elementId);\n\n    return !element || !element.offsetHeight ? 0 : element.offsetHeight;\n  }, []);\n\n  /**\n   * Not important: example stuff\n   */\n  useLayoutEffect(() => {\n    function calcReaderHeight() {\n      const tabsHeight = getElementHeight(tabsId);\n      const headerHeight = getElementHeight(headerId);\n\n      setReadersHeight(`${window.innerHeight - (tabsHeight + headerHeight)}px`);\n    }\n\n    calcReaderHeight();\n\n    window.addEventListener('resize', calcReaderHeight);\n\n    return () => {\n      window.removeEventListener('resize', calcReaderHeight);\n    }\n  }, [getElementHeight]);\n\n  return (\n    <main>\n      <header\n        id={headerId}\n        className=\"header\"\n      >\n        <h1>\n          Barcode Reader\n        </h1>\n      </header>\n      <section>\n        <div\n          id={tabsId}\n          className=\"tabs\"\n        >\n          {tabs.map((tabName) => (\n            <button\n              type=\"button\"\n              id={`${tabsId}_btn_${tabName}`}\n              key={`${tabsId}_btn_${tabName}`}\n              className={`btn ${tabName === tab ? ' active' : ''}`}\n              onClick={() => selectTab(tabName)}\n              disabled={tab === tabName}\n            >\n              {tabName}\n            </button>\n          ))}\n        </div>\n        <BoletoBarcodeReaderProvider>\n          {reading ? (\n            <div id=\"readers\">\n              {tab === 'boleto' && (\n                <div id={`${tabsId}_reader_boleto`}>\n                  <BoletoReader\n                    height={readersHeight}\n                    onCancel={onCancel}\n                    onDetected={onDetectBoleto}\n                  />\n                </div>\n              )}\n              {tab === 'barcode' && (\n                <div id={`${tabsId}_reader_barcode`}>\n                  <BarcodeReader\n                    height={readersHeight}\n                    onCancel={onCancel}\n                    onDetected={onDetectBarcode}\n                  />\n                </div>\n              )}\n            </div>\n          ) : ((!boleto && !barcode) ? (\n            <article id=\"start\">\n              <button\n                type=\"button\"\n                className=\"btn\"\n                onClick={restart}\n              >\n                Start Reading\n              </button>\n            </article>\n          ) : (\n            <article id=\"result\">\n              <pre\n                dangerouslySetInnerHTML={{\n                  __html: (\n                    JSON\n                      .stringify(boleto || barcode || {})\n                      .replace(/{/g, '{<br />  ')\n                      .replace(/\":/g, '\": ')\n                      .replace(/,\"/g, ',<br />  \"')\n                      .replace(/}/g, '<br />}')\n                  )\n                }}\n              />\n              <footer id=\"result_footer\">\n                <button\n                  type=\"button\"\n                  className=\"btn\"\n                  onClick={restart}\n                >\n                  Read Again\n                </button>\n              </footer>\n            </article>\n          ))}\n        </BoletoBarcodeReaderProvider>\n      </section>\n    </main>\n  )\n}\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}