{"version":3,"sources":["../../src/components/BarcodeReader/BarcodeReader.jsx","../../src/components/BoletoReader/BoletoReader.jsx","../../src/components/BoletoReader/getBoletoByCode.js","App.js","index.js"],"names":["BarcodeReader","id","init","inputStream","decoder","readers","format","config","height","window","canvasWidth","canvasHeight","aspectRatio","min","max","onError","onDetected","onProcessed","svgDetectingBoxes","color","lineWidth","svgDetectingBoxesCoords","x","y","svgDetectingBox","svgDetectingLine","useState","videoHeight","parseInt","videoHeightHalf","canvasHeightHalf","canvasY","canvasTop","fire","useCallback","quaggaInit","type","target","constraints","width","facingMode","frequency","singleChannel","locate","locator","patchSize","halfSample","err","console","quaggaStart","quaggaOnDetected","result","code","codeResult","quaggaOnProcessed","drawingCtx","quaggaCanvas","drawingCanvas","box","boxes","guideLine","line","readedCode","guideBoxes","guideBoxItem","quaggaImageDebug","guideBox","error","useLayoutEffect","quaggaOffDetected","quaggaOffProcessed","quaggaStop","clearTimeout","compareWidth","removeListeners","setResizing","setTimeout","setCompare","className","styles","style","BoletoReader","props","handleDetected","boleto","String","getBoletoByCode","App","tabs","tabsId","tab","setTab","setBoleto","barcode","setBarcode","reading","setReading","readersHeight","setReadersHeight","restart","getElementHeight","elementId","element","document","getElementById","offsetHeight","calcReaderHeight","tabsHeight","headerHeight","innerHeight","addEventListener","removeEventListener","map","tabName","key","onClick","disabled","detectedBoleto","banks","expired","expiredDays","expirationDate","prettyAmount","confirm","toUpperCase","dangerouslySetInnerHTML","__html","JSON","stringify","replace","ReactDOM","render"],"mappings":"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","file":"static/js/main.474d142f.chunk.js","sourcesContent":["import React, { useCallback, useLayoutEffect, useState } from 'react'\nimport {\n  init as quaggaInit,\n  start as quaggaStart,\n  stop as quaggaStop,\n  canvas as quaggaCanvas,\n  ImageDebug as quaggaImageDebug,\n  onDetected as quaggaOnDetected,\n  onProcessed as quaggaOnProcessed,\n  offProcessed as quaggaOffProcessed,\n  offDetected as quaggaOffDetected\n} from '@ericblade/quagga2'\nimport styles from './styles.module.css'\n\nexport function BarcodeReader({\n  id = 'react-boleto-reader--barcode',\n  init = {},\n  inputStream = {},\n  decoder = {},\n  readers = [\n    { format: 'ean_reader', config: {} },\n    { format: 'code_128_reader', config: {} }\n  ],\n  height = window.innerHeight,\n  canvasWidth = 1280,\n  canvasHeight = 720,\n  aspectRatio = {\n    min: 0,\n    max: 1\n  },\n  onError = () => {},\n  onDetected = () => {},\n  onProcessed,\n  svgDetectingBoxes = {\n    color: '#0086c9',\n    lineWidth: 2\n  },\n  svgDetectingBoxesCoords = {\n    x: 0,\n    y: 1\n  },\n  svgDetectingBox = {\n    color: 'transparent',\n    lineWidth: 2\n  },\n  svgDetectingLine = {\n    color: 'rgb(239, 60, 62)',\n    lineWidth: 8\n  }\n}) {\n  const [compareWidth, setCompare] = useState(window.innerWidth)\n  const [resizing, setResizing] = useState(null)\n  const videoHeight = parseInt(height, 10)\n  const videoHeightHalf = videoHeight / 2\n  const canvasHeightHalf = canvasHeight / 2\n  const canvasY = canvasHeightHalf - parseInt(height, 10) / 2\n  const canvasTop =\n    videoHeight > canvasHeight\n      ? `${videoHeightHalf - canvasHeightHalf}px`\n      : `-${canvasY - 40}px`\n\n  const fire = useCallback(() => {\n    try {\n      quaggaInit(\n        {\n          inputStream: {\n            type: 'LiveStream',\n            target: `#${id}`,\n            constraints: {\n              width: canvasWidth,\n              height: canvasHeight,\n              facingMode: 'environment',\n              aspectRatio\n            },\n            ...inputStream\n          },\n          frequency: 5,\n          singleChannel: true,\n          locate: true,\n          locator: {\n            patchSize: 'medium',\n            halfSample: true\n          },\n          ...init,\n          decoder: {\n            readers,\n            ...decoder\n          }\n        },\n        (err) => {\n          if (err) {\n            onError(err)\n            console.error(err)\n            return\n          }\n\n          quaggaStart()\n        }\n      )\n\n      quaggaOnDetected((result) => {\n        const {\n          codeResult: { code }\n        } = result || {}\n\n        onDetected(result, code)\n      })\n\n      quaggaOnProcessed((result) => {\n        if (typeof onProcessed === 'function') {\n          onProcessed(result)\n        }\n\n        const shouldDrawGuides =\n          !!svgDetectingBoxes || svgDetectingBox || svgDetectingLine\n\n        if (!shouldDrawGuides || !result || typeof result !== 'object') {\n          return\n        }\n\n        const drawingCtx = quaggaCanvas.ctx.overlay\n        const drawingCanvas = quaggaCanvas.dom.overlay\n        const {\n          box: guideBox,\n          boxes: guideBoxes,\n          codeResult,\n          line: guideLine\n        } = result\n        const { code: readedCode } = codeResult || {}\n\n        if (guideBoxes && svgDetectingBoxes) {\n          drawingCtx.clearRect(\n            0,\n            0,\n            parseInt(drawingCanvas.getAttribute('width')),\n            parseInt(drawingCanvas.getAttribute('height'))\n          )\n\n          guideBoxes\n            .filter((guideBoxItem) => guideBoxItem !== guideBox)\n            .forEach((guideBoxItem) => {\n              quaggaImageDebug.drawPath(\n                guideBoxItem,\n                svgDetectingBoxesCoords,\n                drawingCtx,\n                svgDetectingBoxes\n              )\n            })\n        }\n\n        if (guideBox && svgDetectingBox) {\n          quaggaImageDebug.drawPath(\n            guideBox,\n            { x: 0, y: 1 },\n            drawingCtx,\n            svgDetectingBox\n          )\n        }\n\n        if (readedCode && svgDetectingLine) {\n          quaggaImageDebug.drawPath(\n            guideLine,\n            { x: 'x', y: 'y' },\n            drawingCtx,\n            svgDetectingLine\n          )\n        }\n      })\n    } catch (error) {\n      onError(error)\n    }\n  }, [])\n\n  useLayoutEffect(() => {\n    fire()\n\n    function removeListeners() {\n      quaggaOffDetected()\n      quaggaOffProcessed()\n      quaggaStop()\n      window.removeEventListener('resize', resized)\n    }\n\n    function resized() {\n      clearTimeout(resizing)\n\n      if (compareWidth === window.innerWidth) {\n        return\n      }\n\n      removeListeners()\n      setResizing(\n        setTimeout(() => {\n          fire()\n          setCompare(window.innerWidth)\n        }, 1500)\n      )\n    }\n\n    window.addEventListener('resize', resized)\n\n    return removeListeners\n  }, [fire])\n\n  return (\n    <div\n      id={id}\n      className={styles.rbr}\n      style={{\n        '--rbr-canvas-top': canvasTop,\n        height\n      }}\n    />\n  )\n}\n","import React, { useCallback } from 'react'\nimport { BarcodeReader } from '../BarcodeReader'\nimport { getBoletoByCode } from './getBoletoByCode'\n\nexport function BoletoReader({\n  id = 'react-boleto-reader',\n  readers = ['i2of5_reader'],\n  aspectRatio = {\n    min: 1,\n    max: 2\n  },\n  onDetected = () => {},\n  ...props\n}) {\n  const handleDetected = useCallback((result, code) => {\n    const boleto = getBoletoByCode(code)\n\n    if (!boleto) {\n      return\n    }\n\n    onDetected(boleto, code)\n  }, [])\n\n  return (\n    <BarcodeReader\n      id={id}\n      readers={readers}\n      aspectRatio={aspectRatio}\n      onDetected={handleDetected}\n      {...props}\n    />\n  )\n}\n","import { Boleto } from 'broleto'\n\n/**\n * Get boleto data by barcode or line code\n *\n * @param {String} code\n *\n * @returns {Object}\n */\nexport function getBoletoByCode(code) {\n  const boleto = new Boleto(String(code))\n\n  if (!boleto || !boleto.valid()) {\n    return null\n  }\n\n  return boleto.toJSON()\n}\n","import React, { useCallback, useLayoutEffect, useState } from 'react';\nimport { BarcodeReader, BoletoReader } from 'react-boleto-reader';\nimport 'react-boleto-reader/dist/index.css';\nimport './index.css';\n\nconst App = () => {\n  const tabs = [\n    'boleto',\n    'barcode'\n  ];\n  const tabsId = 'example_tabs';\n  const headerId = 'example_header';\n  const [tab, setTab] = useState(tabs[0]);\n  const [boleto, setBoleto] = useState(null);\n  const [barcode, setBarcode] = useState(null);\n  const [reading, setReading] = useState(false);\n  const [readersHeight, setReadersHeight] = useState(0);\n\n  function onDetectBoleto(detectedBoleto) {\n    const {\n      barcode,\n      banks,\n      expired,\n      expiredDays,\n      expirationDate,\n      prettyAmount,\n      type,\n    } = detectedBoleto;\n\n    const confirmed = window.confirm(\n      'Estes são os dados do boleto? '.toUpperCase()\n      + `\\n\\nTipo: \\n${type} `\n      + `\\n\\nBanco: \\n${banks} `\n      + `\\n\\nValor: \\n${prettyAmount} `\n      + `\\n\\nVencimento: \\n${expirationDate}`\n      + `\\n\\nVencido: \\n${expired ? 'SIM' : 'NÃO'}`\n      + `\\n\\nDias Vencido: \\n${expiredDays}`\n      + `\\n\\nCódigo de Barras: \\n${barcode}`\n      + '\\n(É diferente do número impresso no boleto, o chamado \"linha digitável\")'\n    );\n\n    if (!confirmed) {\n      return;\n    }\n\n    setReading(false);\n    setBoleto(detectedBoleto);\n  }\n\n  function onDetectBarcode(result, code) {\n    const confirmed = window.confirm(\n      'Is the correct code? '.toUpperCase()\n      + `\\n\\n${code} `\n    );\n\n    if (!confirmed) {\n      return;\n    }\n\n    setReading(false);\n    setBarcode({ code, ...result });\n  }\n\n  function restart() {\n    setBoleto(null);\n    setBarcode(null);\n    setReading(true);\n  }\n\n  const getElementHeight = useCallback((elementId = '') => {\n    const element = document.getElementById(elementId);\n\n    return !element || !element.offsetHeight ? 0 : element.offsetHeight;\n  }, []);\n\n  useLayoutEffect(() => {\n    function calcReaderHeight() {\n      const tabsHeight = getElementHeight(tabsId);\n      const headerHeight = getElementHeight(headerId);\n\n      setReadersHeight(`${window.innerHeight - (tabsHeight + headerHeight)}px`);\n    }\n\n    calcReaderHeight();\n\n    window.addEventListener('resize', calcReaderHeight);\n\n    return () => {\n      window.removeEventListener('resize', calcReaderHeight);\n    }\n  }, [getElementHeight]);\n\n  return (\n    <main>\n      <header\n        id={headerId}\n        className=\"header\"\n      >\n        <h1>\n          Boleto & Barcode Readers\n        </h1>\n      </header>\n      <section>\n        <div\n          id={tabsId}\n          className=\"tabs\"\n        >\n          {tabs.map((tabName) => (\n            <button\n              type=\"button\"\n              id={`${tabsId}_btn_${tabName}`}\n              key={`${tabsId}_btn_${tabName}`}\n              className={tabName === tab ? ' active' : ''}\n              onClick={() => setTab(tabName)}\n              disabled={!reading}\n            >\n              {tabName}\n            </button>\n          ))}\n        </div>\n        {reading ? (\n          <div id=\"readers\">\n            {tab === 'boleto' && (\n              <div id={`${tabsId}_reader_boleto`}>\n                <BoletoReader\n                  height={readersHeight}\n                  onDetected={onDetectBoleto}\n                />\n              </div>\n            )}\n            {tab === 'barcode' && (\n              <div id={`${tabsId}_reader_barcode`}>\n                <BarcodeReader\n                  height={readersHeight}\n                  onDetected={onDetectBarcode}\n                />\n              </div>\n            )}\n          </div>\n        ) : ((!boleto && !barcode) ? (\n          <article id=\"start\">\n            <button\n              type=\"button\"\n              onClick={restart}\n            >\n              Start Reading\n            </button>\n          </article>\n        ) : (\n          <article id=\"result\">\n            <pre\n              dangerouslySetInnerHTML={{\n                __html: (\n                  JSON\n                    .stringify(boleto || barcode || {})\n                    .replace(/{/g, '{<br />  ')\n                    .replace(/\":/g, '\": ')\n                    .replace(/,\"/g, ',<br />  \"')\n                    .replace(/}/g, '<br />}')\n                )\n              }}\n            />\n            <footer id=\"result_footer\">\n              <button\n                type=\"button\"\n                onClick={restart}\n              >\n                Read Again\n              </button>\n            </footer>\n          </article>\n        ))}\n      </section>\n    </main>\n  )\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}